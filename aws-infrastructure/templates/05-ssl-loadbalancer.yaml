# ===================================================================
# CloudFormation テンプレート: SSL証明書 + Application Load Balancer
# 目的: HTTPS化とロードバランサーによる高可用性実現
# 費用: ALB（約$18/月）+ ACM（無料）
# ===================================================================

AWSTemplateFormatVersion: '2010-09-09'
Description: 'SSL Certificate and Application Load Balancer for HTTPS'

Parameters:
  ProjectName:
    Type: String
    Default: 'portfolio'
    Description: 'プロジェクト名（リソース名のプレフィックス）'

  Environment:
    Type: String
    Default: 'prod'
    AllowedValues: ['dev', 'staging', 'prod']
    Description: '環境名（開発・ステージング・本番）'

  NetworkStackName:
    Type: String
    Default: 'portfolio-prod-network'
    Description: 'VPCスタック名（ネットワークリソースをインポート）'

  EC2StackName:
    Type: String
    Default: 'portfolio-prod-ec2'
    Description: 'EC2スタック名（インスタンスIDをインポート）'

  DomainName:
    Type: String
    Description: 'SSL証明書を発行するドメイン名（例: example.com）'
    AllowedPattern: '^([a-zA-Z0-9]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?\.)+[a-zA-Z]{2,}$'
    ConstraintDescription: '有効なドメイン名を入力してください（例: example.com）'

  SubdomainName:
    Type: String
    Default: 'www'
    Description: 'サブドメイン名（例: www, api, blog）'
    AllowedPattern: '^[a-zA-Z0-9]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?$'
    ConstraintDescription: '有効なサブドメイン名を入力してください'

  # TODO(human): 証明書の自動検証方法を選択可能にする
  ValidationMethod:
    Type: String
    Default: 'DNS'
    AllowedValues: ['DNS', 'EMAIL']
    Description: 'SSL証明書の検証方法（DNS推奨）'

Conditions:
  # 本番環境の場合のみ特定の設定を有効化
  IsProduction: !Equals [!Ref Environment, 'prod']

Resources:
  # -------------------------------------------------------------------
  # SSL証明書（AWS Certificate Manager）
  # -------------------------------------------------------------------
  SSLCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Sub '${SubdomainName}.${DomainName}'
      SubjectAlternativeNames:
        - !Ref DomainName  # ルートドメインも含める
        - !Sub '*.${DomainName}'  # ワイルドカード証明書
      ValidationMethod: !Ref ValidationMethod
      DomainValidationOptions:
        - DomainName: !Sub '${SubdomainName}.${DomainName}'
          ValidationDomain: !Ref DomainName
        - DomainName: !Ref DomainName
          ValidationDomain: !Ref DomainName
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-ssl-cert'
        - Key: Environment
          Value: !Ref Environment

  # -------------------------------------------------------------------
  # Application Load Balancer
  # -------------------------------------------------------------------
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub '${ProjectName}-${Environment}-alb'
      Type: application
      Scheme: internet-facing
      IpAddressType: ipv4

      # サブネット設定（パブリックサブネットに配置）
      Subnets:
        - !ImportValue
          Fn::Sub: '${NetworkStackName}-PublicSubnetId'
        - !ImportValue
          Fn::Sub: '${NetworkStackName}-PublicSubnetSecondId'

      # セキュリティグループ
      SecurityGroups:
        - !Ref ALBSecurityGroup

      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-alb'
        - Key: Environment
          Value: !Ref Environment

  # -------------------------------------------------------------------
  # ALB用セキュリティグループ
  # -------------------------------------------------------------------
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${ProjectName}-${Environment}-alb-sg'
      GroupDescription: 'Security group for Application Load Balancer'
      VpcId: !ImportValue
        Fn::Sub: '${NetworkStackName}-VPCId'

      SecurityGroupIngress:
        # HTTP (80) - HTTPSへのリダイレクト用
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: 'HTTP access for HTTPS redirect'

        # HTTPS (443) - メインのWebトラフィック
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: 'HTTPS access from anywhere'

      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-alb-sg'

  # -------------------------------------------------------------------
  # ターゲットグループ（EC2インスタンス用）
  # -------------------------------------------------------------------
  EC2TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub '${ProjectName}-${Environment}-tg'
      Protocol: HTTP
      Port: 80
      VpcId: !ImportValue
        Fn::Sub: '${NetworkStackName}-VPCId'
      TargetType: instance

      # ヘルスチェック設定
      HealthCheckEnabled: true
      HealthCheckProtocol: HTTP
      HealthCheckPort: traffic-port
      HealthCheckPath: '/'
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 3
      Matcher:
        HttpCode: '200,301,302'

      # ターゲット登録
      Targets:
        - Id: !ImportValue
            Fn::Sub: '${EC2StackName}-InstanceId'
          Port: 80

      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-tg'

  # -------------------------------------------------------------------
  # ALBリスナー（HTTPS）
  # -------------------------------------------------------------------
  HTTPSListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Protocol: HTTPS
      Port: 443
      SslPolicy: ELBSecurityPolicy-TLS-1-2-2017-01  # 推奨SSL政策

      # SSL証明書
      Certificates:
        - CertificateArn: !Ref SSLCertificate

      # デフォルトアクション（EC2ターゲットグループに転送）
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref EC2TargetGroup

  # -------------------------------------------------------------------
  # ALBリスナー（HTTP → HTTPS リダイレクト）
  # -------------------------------------------------------------------
  HTTPListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Protocol: HTTP
      Port: 80

      # HTTPアクセスを自動的にHTTPSにリダイレクト
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: 443
            StatusCode: HTTP_301  # 永続的リダイレクト

  # -------------------------------------------------------------------
  # Route 53レコード（オプション）
  # TODO(human): ドメインのDNS設定を実装する
  # -------------------------------------------------------------------

Outputs:
  # SSL証明書情報
  SSLCertificateArn:
    Description: 'SSL証明書のARN'
    Value: !Ref SSLCertificate
    Export:
      Name: !Sub '${AWS::StackName}-SSLCertificateArn'

  # ALB情報
  LoadBalancerArn:
    Description: 'Application Load BalancerのARN'
    Value: !Ref ApplicationLoadBalancer
    Export:
      Name: !Sub '${AWS::StackName}-LoadBalancerArn'

  LoadBalancerDNSName:
    Description: 'ALBのDNS名（CNAMEレコード設定用）'
    Value: !GetAtt ApplicationLoadBalancer.DNSName
    Export:
      Name: !Sub '${AWS::StackName}-LoadBalancerDNSName'

  LoadBalancerHostedZoneId:
    Description: 'ALBのHosted Zone ID（Aliasレコード設定用）'
    Value: !GetAtt ApplicationLoadBalancer.CanonicalHostedZoneID
    Export:
      Name: !Sub '${AWS::StackName}-LoadBalancerHostedZoneId'

  # アクセス情報
  HTTPSWebsiteURL:
    Description: 'HTTPS WebサイトURL（証明書検証後に利用可能）'
    Value: !Sub 'https://${SubdomainName}.${DomainName}'

  HTTPWebsiteURL:
    Description: 'HTTP WebサイトURL（HTTPSにリダイレクトされます）'
    Value: !Sub 'http://${SubdomainName}.${DomainName}'

  # DNS設定用情報
  DNSSetupInstructions:
    Description: 'DNS設定手順（ドメインレジストラで設定が必要）'
    Value: !Sub |
      以下のCNAMEレコードをドメインのDNS設定に追加してください:
      ${SubdomainName}.${DomainName} → ${ApplicationLoadBalancer.DNSName}
      ${DomainName} → ${ApplicationLoadBalancer.DNSName}

# ===================================================================
# 重要な注意事項:
#
# 1. SSL証明書の検証
#    - DNS検証の場合: Route 53またはドメインレジストラでCNAMEレコード追加が必要
#    - EMAIL検証の場合: ドメインの管理者メールアドレスに送信される確認メールで承認
#
# 2. ドメイン設定
#    - ドメインレジストラまたはRoute 53でCNAMEレコードの設定が必要
#    - ALBのDNS名をCNAMEの値として設定
#
# 3. 費用について
#    - Application Load Balancer: 約$18-25/月
#    - SSL証明書（ACM）: 無料
#    - データ転送料: 使用量による
#
# 4. 本番運用での推奨事項
#    - 複数AZへのALB配置
#    - WAF（Web Application Firewall）の追加
#    - CloudFrontとの組み合わせ
# ===================================================================